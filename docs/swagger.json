{
  "swagger": "2.0",
  "info": {
    "description": "Build web applications to crawler article information on technology blogs using Echo Framework (Golang)",
    "title": "Tech Posts Trending API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "API Support",
      "url": "http://www.swagger.io/support",
      "email": "support@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "paths": {
    "/posts": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "post-service"
        ],
        "summary": "Get all posts trending",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "post-service"
        ],
        "summary": "Search post by tag",
        "parameters": [
          {
            "type": "string",
            "description": "tags of posts",
            "name": "tags",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/bookmark/add": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookmark-service"
        ],
        "summary": "Add bookmark",
        "parameters": [
          {
            "description": "user",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/req.ReqBookmark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/bookmark/delete": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookmark-service"
        ],
        "summary": "Delete bookmark",
        "parameters": [
          {
            "description": "user",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/req.ReqBookmark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/bookmark/list": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bookmark-service"
        ],
        "summary": "Get list bookmark",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/password/forgot": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user-service"
        ],
        "summary": "Forgot password",
        "parameters": [
          {
            "description": "user",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/req.ReqEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/password/reset": {
      "put": {
        "security": [
          {
            "token-reset-password": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user-service"
        ],
        "summary": "Reset password",
        "parameters": [
          {
            "description": "user",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/req.PasswordSubmit"
            }
          },
          {
            "type": "string",
            "description": "token reset password",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile-service"
        ],
        "summary": "Get user profile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/profile/update": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile-service"
        ],
        "summary": "Update user profile",
        "parameters": [
          {
            "description": "user",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/req.ReqUpdateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/refresh": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user-service"
        ],
        "summary": "Refresh token",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/sign-in": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user-service"
        ],
        "summary": "Sign in to access your account",
        "parameters": [
          {
            "description": "user",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/req.ReqSignIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/sign-out": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile-service"
        ],
        "summary": "Sign out user profile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/sign-up": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user-service"
        ],
        "summary": "Create new account",
        "parameters": [
          {
            "description": "user",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/req.ReqSignUp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    },
    "/user/verify": {
      "post": {
        "security": [
          {
            "token-verify-account": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user-service"
        ],
        "summary": "Verify email",
        "parameters": [
          {
            "description": "user",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/req.PasswordSubmit"
            }
          },
          {
            "type": "string",
            "description": "token verify email",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/model.Response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "model.Response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "req.PasswordSubmit": {
      "type": "object",
      "required": [
        "confirm",
        "password"
      ],
      "properties": {
        "confirm": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "req.ReqBookmark": {
      "type": "object",
      "required": [
        "post"
      ],
      "properties": {
        "post": {
          "type": "string"
        }
      }
    },
    "req.ReqEmail": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "req.ReqSignIn": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "req.ReqSignUp": {
      "type": "object",
      "required": [
        "email",
        "full_name",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "req.ReqUpdateUser": {
      "type": "object",
      "properties": {
        "confirm": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}